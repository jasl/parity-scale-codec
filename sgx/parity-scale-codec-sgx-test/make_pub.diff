diff --git a/src/compact.rs b/src/compact.rs
index 5d8b452..843834c 100644
--- a/src/compact.rs
+++ b/src/compact.rs
@@ -20,7 +20,7 @@ use crate::alloc::vec::Vec;
 use crate::codec::{Encode, Decode, Input, Output, EncodeAsRef, Error};
 use crate::encode_like::EncodeLike;
 
-struct ArrayVecWrapper<T: arrayvec::Array>(ArrayVec<T>);
+#[doc(hidden)] pub struct ArrayVecWrapper<T: arrayvec::Array>(pub ArrayVec<T>);
 
 impl<T: arrayvec::Array<Item=u8>> Output for ArrayVecWrapper<T> {
 	fn write(&mut self, bytes: &[u8]) {
diff --git a/src/lib.rs b/src/lib.rs
index 81da3d2..d27c867 100644
--- a/src/lib.rs
+++ b/src/lib.rs
@@ -288,7 +288,7 @@ pub use self::codec::{
 };
 #[cfg(feature = "std")]
 pub use self::codec::IoReader;
-pub use self::compact::{Compact, HasCompact, CompactAs, CompactLen};
+pub use self::compact::{Compact, HasCompact, CompactAs, CompactLen, CompactRef, ArrayVecWrapper};
 pub use self::joiner::Joiner;
 pub use self::keyedvec::KeyedVec;
 pub use self::decode_all::DecodeAll;
